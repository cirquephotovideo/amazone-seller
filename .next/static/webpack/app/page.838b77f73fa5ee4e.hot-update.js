"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/dataUtils.ts":
/*!********************************!*\
  !*** ./src/utils/dataUtils.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportToCSV: function() { return /* binding */ exportToCSV; },\n/* harmony export */   exportToExcel: function() { return /* binding */ exportToExcel; },\n/* harmony export */   filterData: function() { return /* binding */ filterData; },\n/* harmony export */   generateMockData: function() { return /* binding */ generateMockData; },\n/* harmony export */   parseImportedFile: function() { return /* binding */ parseImportedFile; },\n/* harmony export */   sortData: function() { return /* binding */ sortData; }\n/* harmony export */ });\nconst generateMockData = (count)=>{\n    return Array.from({\n        length: count\n    }, (_, i)=>({\n            id: \"prod-\".concat(i + 1),\n            name: \"Product \".concat(i + 1),\n            sku: \"SKU-\".concat(i + 1),\n            price: Math.floor(Math.random() * 1000),\n            stock: Math.floor(Math.random() * 100),\n            category: [\n                \"Electronics\",\n                \"Clothing\",\n                \"Books\",\n                \"Home\"\n            ][Math.floor(Math.random() * 4)],\n            status: [\n                \"In Stock\",\n                \"Low Stock\",\n                \"Out of Stock\"\n            ][Math.floor(Math.random() * 3)],\n            lastUpdated: new Date(Date.now() - Math.random() * 10000000000).toISOString()\n        }));\n};\nconst filterData = (data, filters)=>{\n    if (!data || !Array.isArray(data)) return [];\n    return data.filter((product)=>{\n        const matchesSearch = !filters.search || product.name.toLowerCase().includes(filters.search.toLowerCase()) || product.sku.toLowerCase().includes(filters.search.toLowerCase());\n        const matchesCategory = !filters.category.length || filters.category.includes(product.category);\n        const matchesStatus = !filters.status.length || filters.status.includes(product.status);\n        return matchesSearch && matchesCategory && matchesStatus;\n    });\n};\nconst sortData = (data, sort)=>{\n    if (!data || !Array.isArray(data)) return [];\n    return [\n        ...data\n    ].sort((a, b)=>{\n        const aValue = a[sort.key];\n        const bValue = b[sort.key];\n        if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n            return sort.direction === \"asc\" ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n        }\n        if (typeof aValue === \"number\" && typeof bValue === \"number\") {\n            return sort.direction === \"asc\" ? aValue - bValue : bValue - aValue;\n        }\n        return 0;\n    });\n};\nconst exportToCSV = async (data, columns)=>{\n    if (!data || !Array.isArray(data) || !data.length) return;\n    const headers = columns.filter((col)=>col.visible).map((col)=>col.label).join(\",\");\n    const rows = data.map((product)=>columns.filter((col)=>col.visible).map((col)=>product[col.key]).join(\",\")).join(\"\\\\n\");\n    const csv = \"\".concat(headers, \"\\\\n\").concat(rows);\n    const blob = new Blob([\n        csv\n    ], {\n        type: \"text/csv\"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"products.csv\";\n    a.click();\n    window.URL.revokeObjectURL(url);\n};\nconst exportToExcel = async (data, columns)=>{\n    // Implementation depends on your Excel library choice\n    console.log(\"Excel export not implemented yet\");\n};\nconst parseImportedFile = async (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = (event)=>{\n            try {\n                var _event_target;\n                const text = (_event_target = event.target) === null || _event_target === void 0 ? void 0 : _event_target.result;\n                const lines = text.split(\"\\\\n\");\n                const headers = lines[0].split(\",\");\n                const products = lines.slice(1).filter((line)=>line.trim()).map((line)=>{\n                    const values = line.split(\",\");\n                    const product = {};\n                    headers.forEach((header, index)=>{\n                        var _values_index;\n                        const value = (_values_index = values[index]) === null || _values_index === void 0 ? void 0 : _values_index.trim();\n                        if (value) {\n                            const key = header.trim().toLowerCase();\n                            if (key === \"price\" || key === \"stock\") {\n                                product[key] = Number(value);\n                            } else {\n                                product[key] = value;\n                            }\n                        }\n                    });\n                    return {\n                        id: \"imported-\".concat(Date.now(), \"-\").concat(Math.random()),\n                        name: product.name || \"\",\n                        sku: product.sku || \"\",\n                        price: product.price || 0,\n                        stock: product.stock || 0,\n                        category: product.category || \"Uncategorized\",\n                        status: product.status || \"Unknown\",\n                        lastUpdated: new Date().toISOString()\n                    };\n                });\n                resolve(products);\n            } catch (error) {\n                reject(error);\n            }\n        };\n        reader.onerror = ()=>reject(new Error(\"Failed to read file\"));\n        reader.readAsText(file);\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/dataUtils.ts\n"));

/***/ })

});