"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/amazonApi.ts":
/*!********************************!*\
  !*** ./src/utils/amazonApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAmazonInventory: function() { return /* binding */ fetchAmazonInventory; },\n/* harmony export */   fetchProductsByEAN: function() { return /* binding */ fetchProductsByEAN; },\n/* harmony export */   initializeAmazonApi: function() { return /* binding */ initializeAmazonApi; },\n/* harmony export */   syncInventoryWithAmazon: function() { return /* binding */ syncInventoryWithAmazon; },\n/* harmony export */   testAmazonConnection: function() { return /* binding */ testAmazonConnection; },\n/* harmony export */   updateAmazonProduct: function() { return /* binding */ updateAmazonProduct; }\n/* harmony export */ });\n/* harmony import */ var _scaleleap_selling_partner_api_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scaleleap/selling-partner-api-sdk */ \"(app-pages-browser)/./node_modules/@scaleleap/selling-partner-api-sdk/lib/index.js\");\n/* harmony import */ var _scaleleap_selling_partner_api_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scaleleap_selling_partner_api_sdk__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n// Amazon Seller API credentials\nconst amazonConfig = {\n    MARKETPLACE_ID: \"ATVPDKIKX0DER\",\n    SELLER_ID: \"YOUR_SELLER_ID\",\n    ACCESS_KEY: process.env.AMAZON_ACCESS_KEY,\n    SECRET_KEY: process.env.AMAZON_SECRET_KEY,\n    ROLE_ARN: process.env.AMAZON_ROLE_ARN,\n    APP_ID: process.env.AMAZON_APP_ID,\n    AWS_REGION: process.env.AMAZON_AWS_REGION,\n    REFRESH_TOKEN: process.env.AMAZON_REFRESH_TOKEN,\n    ACCESS_TOKEN: process.env.AMAZON_ACCESS_TOKEN,\n    CLIENT_SECRET: process.env.AMAZON_CLIENT_SECRET\n};\nlet spApi = null;\nconst initializeAmazonApi = async ()=>{\n    if (!spApi) {\n        spApi = new _scaleleap_selling_partner_api_sdk__WEBPACK_IMPORTED_MODULE_0__.SellingPartnerAPI({\n            region: amazonConfig.AWS_REGION,\n            refresh_token: amazonConfig.REFRESH_TOKEN,\n            access_token: amazonConfig.ACCESS_TOKEN,\n            client_id: amazonConfig.APP_ID,\n            client_secret: amazonConfig.CLIENT_SECRET,\n            credentials: {\n                SELLING_PARTNER_APP_CLIENT_ID: amazonConfig.APP_ID,\n                SELLING_PARTNER_APP_CLIENT_SECRET: amazonConfig.CLIENT_SECRET,\n                AWS_ACCESS_KEY_ID: amazonConfig.ACCESS_KEY,\n                AWS_SECRET_ACCESS_KEY: amazonConfig.SECRET_KEY,\n                AWS_SELLING_PARTNER_ROLE: amazonConfig.ROLE_ARN\n            }\n        });\n    }\n    return spApi;\n};\nconst testAmazonConnection = async (credentials)=>{\n    // For demo purposes, simulate API call\n    await new Promise((resolve)=>setTimeout(resolve, 1000));\n    // Validate required credentials\n    const requiredFields = [\n        \"marketplaceId\",\n        \"sellerId\",\n        \"accessKey\",\n        \"secretKey\",\n        \"roleArn\",\n        \"appId\"\n    ];\n    const missingFields = requiredFields.filter((field)=>!credentials[field]);\n    if (missingFields.length > 0) {\n        throw new Error(\"Missing required fields: \".concat(missingFields.join(\", \")));\n    }\n    // In a real implementation, this would make an API call to Amazon\n    return true;\n};\nconst fetchAmazonInventory = async ()=>{\n    // For demo purposes, return mock data\n    return [\n        {\n            id: \"AMZN-001\",\n            name: \"Wireless Earbuds\",\n            sku: \"WE-001\",\n            price: 49.99,\n            stock: 150,\n            category: \"Electronics\",\n            status: \"In Stock\",\n            lastUpdated: new Date().toISOString()\n        },\n        {\n            id: \"AMZN-002\",\n            name: \"Smart Watch\",\n            sku: \"SW-002\",\n            price: 199.99,\n            stock: 75,\n            category: \"Electronics\",\n            status: \"In Stock\",\n            lastUpdated: new Date().toISOString()\n        },\n        {\n            id: \"AMZN-003\",\n            name: \"Bluetooth Speaker\",\n            sku: \"BS-003\",\n            price: 79.99,\n            stock: 5,\n            category: \"Electronics\",\n            status: \"Low Stock\",\n            lastUpdated: new Date().toISOString()\n        },\n        {\n            id: \"AMZN-004\",\n            name: \"Gaming Mouse\",\n            sku: \"GM-004\",\n            price: 29.99,\n            stock: 0,\n            category: \"Electronics\",\n            status: \"Out of Stock\",\n            lastUpdated: new Date().toISOString()\n        },\n        {\n            id: \"AMZN-005\",\n            name: \"Laptop Stand\",\n            sku: \"LS-005\",\n            price: 39.99,\n            stock: 200,\n            category: \"Electronics\",\n            status: \"In Stock\",\n            lastUpdated: new Date().toISOString()\n        }\n    ];\n// Actual implementation would use the Amazon Selling Partner API\n/*\n  try {\n    const api = await initializeAmazonApi()\n    const response = await api.catalogApi.getCatalogItem({\n      MarketplaceId: amazonConfig.MARKETPLACE_ID,\n      SellerSKU: '', // Add specific SKUs if needed\n    })\n\n    // Transform Amazon inventory data to our Product type\n    const products: Product[] = response.payload.map((item: any) => ({\n      id: item.Identifiers.MarketplaceASIN,\n      name: item.AttributeSets[0].Title,\n      sku: item.Identifiers.SellerSKU,\n      price: parseFloat(item.AttributeSets[0].ListPrice?.Amount || '0'),\n      category: item.AttributeSets[0].ProductGroup,\n      status: 'active',\n      stock: 0, // We'll need to fetch inventory levels separately\n      lastUpdated: new Date().toISOString(),\n    }))\n\n    // Fetch inventory levels\n    const inventoryResponse = await api.inventoryApi.getInventorySummaries({\n      marketplaceIds: [amazonConfig.MARKETPLACE_ID],\n      sellerSkus: products.map(p => p.sku),\n    })\n\n    // Update stock levels\n    inventoryResponse.payload.inventorySummaries.forEach((summary: any) => {\n      const product = products.find(p => p.sku === summary.sellerSku)\n      if (product) {\n        product.stock = summary.totalQuantity\n      }\n    })\n\n    return products\n  } catch (error) {\n    console.error('Error fetching Amazon inventory:', error)\n    throw error\n  }\n  */ };\nconst syncInventoryWithAmazon = async (products)=>{\n    try {\n        const api = await initializeAmazonApi();\n        // Update inventory levels on Amazon\n        const updates = products.map((product)=>({\n                SellerSKU: product.sku,\n                Quantity: product.stock.toString()\n            }));\n        await api.inventoryApi.submitInventoryUpdate({\n            marketplaceIds: [\n                amazonConfig.MARKETPLACE_ID\n            ],\n            inventoryUpdates: updates\n        });\n        return true;\n    } catch (error) {\n        console.error(\"Error syncing inventory with Amazon:\", error);\n        throw error;\n    }\n};\nconst updateAmazonProduct = async (product)=>{\n    try {\n        const api = await initializeAmazonApi();\n        // Update product details on Amazon\n        await api.catalogApi.updateCatalogItem({\n            marketplaceIds: [\n                amazonConfig.MARKETPLACE_ID\n            ],\n            sku: product.sku,\n            attributes: {\n                Title: product.name,\n                StandardPrice: product.price.toString()\n            }\n        });\n        return true;\n    } catch (error) {\n        console.error(\"Error updating Amazon product:\", error);\n        throw error;\n    }\n};\nasync function fetchProductsByEAN(ean) {\n    try {\n        var _item_attributes_listPrice, _item_attributes_listPrice1, _inventory_inventorySummaries_, _inventory_inventorySummaries, _item_images_, _item_images, _item_productTypes, _item_dimensions_length, _item_dimensions, _item_dimensions_width, _item_dimensions1, _item_dimensions_height, _item_dimensions2, _item_dimensions_weight, _item_dimensions3, _inventory_inventorySummaries_1, _inventory_inventorySummaries1;\n        const credentials = JSON.parse(localStorage.getItem(\"amazonCredentials\") || \"{}\");\n        // Initialize the Amazon Selling Partner API client\n        const client = new _scaleleap_selling_partner_api_sdk__WEBPACK_IMPORTED_MODULE_0__.SellingPartnerAPI({\n            region: credentials.region || process.env.NEXT_PUBLIC_AMAZON_AWS_REGION,\n            refresh_token: credentials.refreshToken || process.env.NEXT_PUBLIC_AMAZON_REFRESH_TOKEN,\n            credentials: {\n                SELLING_PARTNER_APP_CLIENT_ID: credentials.appId || process.env.NEXT_PUBLIC_AMAZON_APP_ID,\n                SELLING_PARTNER_APP_CLIENT_SECRET: credentials.clientSecret || process.env.NEXT_PUBLIC_AMAZON_CLIENT_SECRET,\n                AWS_ACCESS_KEY_ID: credentials.accessKey || process.env.NEXT_PUBLIC_AMAZON_ACCESS_KEY,\n                AWS_SECRET_ACCESS_KEY: credentials.secretKey || process.env.NEXT_PUBLIC_AMAZON_SECRET_KEY,\n                AWS_SELLING_PARTNER_ROLE: credentials.roleArn || process.env.NEXT_PUBLIC_AMAZON_ROLE_ARN\n            }\n        });\n        // Search for the product using the EAN\n        const response = await client.catalogApi.searchCatalogItems({\n            marketplaceIds: [\n                credentials.marketplaceId || \"ATVPDKIKX0DER\"\n            ],\n            identifiers: [\n                ean\n            ],\n            identifiersType: \"EAN\",\n            includedData: [\n                \"attributes\",\n                \"dimensions\",\n                \"identifiers\",\n                \"images\",\n                \"productTypes\",\n                \"relationships\",\n                \"salesRanks\"\n            ]\n        });\n        if (!response.items || response.items.length === 0) {\n            console.warn(\"No product found for EAN: \".concat(ean));\n            return null;\n        }\n        const item = response.items[0];\n        // Get inventory information\n        const inventory = await client.inventoryApi.getInventorySummaries({\n            marketplaceIds: [\n                credentials.marketplaceId || \"ATVPDKIKX0DER\"\n            ],\n            sellerSkus: [\n                item.identifiers.sellerSKU\n            ]\n        });\n        // Transform the data into our app's format\n        return {\n            id: item.asin,\n            sku: item.identifiers.sellerSKU,\n            name: item.attributes.title,\n            description: item.attributes.productDescription,\n            price: (_item_attributes_listPrice = item.attributes.listPrice) === null || _item_attributes_listPrice === void 0 ? void 0 : _item_attributes_listPrice.amount,\n            currency: (_item_attributes_listPrice1 = item.attributes.listPrice) === null || _item_attributes_listPrice1 === void 0 ? void 0 : _item_attributes_listPrice1.currency,\n            stock: ((_inventory_inventorySummaries = inventory.inventorySummaries) === null || _inventory_inventorySummaries === void 0 ? void 0 : (_inventory_inventorySummaries_ = _inventory_inventorySummaries[0]) === null || _inventory_inventorySummaries_ === void 0 ? void 0 : _inventory_inventorySummaries_.totalQuantity) || 0,\n            image: (_item_images = item.images) === null || _item_images === void 0 ? void 0 : (_item_images_ = _item_images[0]) === null || _item_images_ === void 0 ? void 0 : _item_images_.link,\n            brand: item.attributes.brand,\n            category: (_item_productTypes = item.productTypes) === null || _item_productTypes === void 0 ? void 0 : _item_productTypes[0],\n            dimensions: {\n                length: (_item_dimensions = item.dimensions) === null || _item_dimensions === void 0 ? void 0 : (_item_dimensions_length = _item_dimensions.length) === null || _item_dimensions_length === void 0 ? void 0 : _item_dimensions_length.value,\n                width: (_item_dimensions1 = item.dimensions) === null || _item_dimensions1 === void 0 ? void 0 : (_item_dimensions_width = _item_dimensions1.width) === null || _item_dimensions_width === void 0 ? void 0 : _item_dimensions_width.value,\n                height: (_item_dimensions2 = item.dimensions) === null || _item_dimensions2 === void 0 ? void 0 : (_item_dimensions_height = _item_dimensions2.height) === null || _item_dimensions_height === void 0 ? void 0 : _item_dimensions_height.value,\n                weight: (_item_dimensions3 = item.dimensions) === null || _item_dimensions3 === void 0 ? void 0 : (_item_dimensions_weight = _item_dimensions3.weight) === null || _item_dimensions_weight === void 0 ? void 0 : _item_dimensions_weight.value\n            },\n            ean: ean,\n            asin: item.asin,\n            status: ((_inventory_inventorySummaries1 = inventory.inventorySummaries) === null || _inventory_inventorySummaries1 === void 0 ? void 0 : (_inventory_inventorySummaries_1 = _inventory_inventorySummaries1[0]) === null || _inventory_inventorySummaries_1 === void 0 ? void 0 : _inventory_inventorySummaries_1.totalQuantity) > 0 ? \"active\" : \"out-of-stock\",\n            lastUpdated: new Date().toISOString()\n        };\n    } catch (error) {\n        console.error(\"Error fetching product from Amazon:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/amazonApi.ts\n"));

/***/ })

});